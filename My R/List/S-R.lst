
AVRASM ver. 2.1.30  C:\Users\Ali\Desktop\nrf file\My R\List\S-R.asm Sat Sep 27 13:33:19 2014

C:\Users\Ali\Desktop\nrf file\My R\List\S-R.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Ali\Desktop\nrf file\My R\List\S-R.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Ali\Desktop\nrf file\My R\List\S-R.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\Ali\Desktop\nrf file\My R\List\S-R.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Users\Ali\Desktop\nrf file\My R\List\S-R.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Command_Reg=R5
                 	.DEF _Status_Reg=R4
                 	.DEF _State=R7
                 	.DEF _Opr_Mode=R6
                 	.DEF _data1=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0045 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0107 	JMP  _ext_int2_isr
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _Base_Addrs:
00002a 0100
00002b 0703
C:\Users\Ali\Desktop\nrf file\My R\List\S-R.asm(1124): warning: .cseg .db misalignment - padding zero byte
00002c 0000      	.DB  0x0,0x1,0x3,0x7,0x0
                 _tbl10_G100:
00002d 2710
00002e 03e8
00002f 0064
000030 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000031 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000032 1000
000033 0100
000034 0010
000035 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000036 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000037 0000
000038 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x3:
000039 0100
00003a 0703      	.DB  0x0,0x1,0x3,0x7
                 
                 __GLOBAL_INI_TBL:
00003b 0001      	.DW  0x01
00003c 0002      	.DW  0x02
00003d 006c      	.DW  __REG_BIT_VARS*2
                 
00003e 0004      	.DW  0x04
00003f 0004      	.DW  0x04
000040 006e      	.DW  __REG_VARS*2
                 
000041 0004      	.DW  0x04
000042 0260      	.DW  _Temp_Addrs
000043 0072      	.DW  _0x3*2
                 
                 _0xFFFFFFFF:
000044 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000045 94f8      	CLI
000046 27ee      	CLR  R30
000047 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000048 e0f1      	LDI  R31,1
000049 bffb      	OUT  GICR,R31
00004a bfeb      	OUT  GICR,R30
00004b bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00004c e1f8      	LDI  R31,0x18
00004d bdf1      	OUT  WDTCR,R31
00004e bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00004f e08d      	LDI  R24,(14-2)+1
000050 e0a2      	LDI  R26,2
000051 27bb      	CLR  R27
                 __CLEAR_REG:
000052 93ed      	ST   X+,R30
000053 958a      	DEC  R24
000054 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000055 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000056 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000057 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000058 93ed      	ST   X+,R30
000059 9701      	SBIW R24,1
00005a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005b e7e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005c e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005d 9185      	LPM  R24,Z+
00005e 9195      	LPM  R25,Z+
00005f 9700      	SBIW R24,0
000060 f061      	BREQ __GLOBAL_INI_END
000061 91a5      	LPM  R26,Z+
000062 91b5      	LPM  R27,Z+
000063 9005      	LPM  R0,Z+
000064 9015      	LPM  R1,Z+
000065 01bf      	MOVW R22,R30
000066 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000067 9005      	LPM  R0,Z+
000068 920d      	ST   X+,R0
000069 9701      	SBIW R24,1
00006a f7e1      	BRNE __GLOBAL_INI_LOOP
00006b 01fb      	MOVW R30,R22
00006c cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006d e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006e bfed      	OUT  SPL,R30
00006f e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000070 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000071 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000072 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000073 940c 01a7 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <nRF24L01+.h>
                 
                 	.DSEG
                 
                 	.CSEG
                 _Set_Reg:
                 ; .FSTART _Set_Reg
000075 93aa      	ST   -Y,R26
000076 931a      	ST   -Y,R17
000077 930a      	ST   -Y,R16
                 ;	ins -> Y+2
                 ;	i -> R16,R17
000078 98c4      	CBI  0x18,4
000079 81aa      	LDD  R26,Y+2
00007a 940e 01b4 	CALL _spi
00007c 2e4e      	MOV  R4,R30
00007d 81ea      	LDD  R30,Y+2
00007e e0f0      	LDI  R31,0
00007f 7ee0      	ANDI R30,LOW(0xE0)
000080 70f0      	ANDI R31,HIGH(0xE0)
000081 9730      	SBIW R30,0
000082 f521      	BRNE _0x9
000083 81ea      	LDD  R30,Y+2
000084 71ef      	ANDI R30,LOW(0x1F)
000085 30ea      	CPI  R30,LOW(0xA)
000086 f041      	BREQ _0xB
000087 81ea      	LDD  R30,Y+2
000088 71ef      	ANDI R30,LOW(0x1F)
000089 30eb      	CPI  R30,LOW(0xB)
00008a f021      	BREQ _0xB
00008b 81ea      	LDD  R30,Y+2
00008c 71ef      	ANDI R30,LOW(0x1F)
00008d 31e0      	CPI  R30,LOW(0x10)
00008e f499      	BRNE _0xA
                 _0xB:
                +
00008f e004     +LDI R16 , LOW ( 4 )
000090 e010     +LDI R17 , HIGH ( 4 )
                 	__GETWRN 16,17,4
                 _0xE:
000091 2311      	TST  R17
000092 f072      	BRMI _0xF
000093 01f8      	MOVW R30,R16
000094 5ae0      	SUBI R30,LOW(-_Temp_Addrs)
000095 4ffd      	SBCI R31,HIGH(-_Temp_Addrs)
000096 93ff      	PUSH R31
000097 93ef      	PUSH R30
000098 efaf      	LDI  R26,LOW(255)
000099 940e 01b4 	CALL _spi
00009b 91af      	POP  R26
00009c 91bf      	POP  R27
00009d 93ec      	ST   X,R30
                +
00009e 5001     +SUBI R16 , LOW ( 1 )
00009f 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0000a0 cff0      	RJMP _0xE
                 _0xF:
0000a1 c004      	RJMP _0x10
                 _0xA:
0000a2 efaf      	LDI  R26,LOW(255)
0000a3 940e 01b4 	CALL _spi
0000a5 2e5e      	MOV  R5,R30
                 _0x10:
0000a6 c058      	RJMP _0x8
                 _0x9:
0000a7 32e0      	CPI  R30,LOW(0x20)
0000a8 e0a0      	LDI  R26,HIGH(0x20)
0000a9 07fa      	CPC  R31,R26
0000aa f4f1      	BRNE _0x11
0000ab 81ea      	LDD  R30,Y+2
0000ac 71ef      	ANDI R30,LOW(0x1F)
0000ad 30ea      	CPI  R30,LOW(0xA)
0000ae f041      	BREQ _0x13
0000af 81ea      	LDD  R30,Y+2
0000b0 71ef      	ANDI R30,LOW(0x1F)
0000b1 30eb      	CPI  R30,LOW(0xB)
0000b2 f021      	BREQ _0x13
0000b3 81ea      	LDD  R30,Y+2
0000b4 71ef      	ANDI R30,LOW(0x1F)
0000b5 31e0      	CPI  R30,LOW(0x10)
0000b6 f471      	BRNE _0x12
                 _0x13:
                +
0000b7 e004     +LDI R16 , LOW ( 4 )
0000b8 e010     +LDI R17 , HIGH ( 4 )
                 	__GETWRN 16,17,4
                 _0x16:
0000b9 2311      	TST  R17
0000ba f04a      	BRMI _0x17
0000bb 01f8      	MOVW R30,R16
0000bc 5aec      	SUBI R30,LOW(-_Base_Addrs*2)
0000bd 4fff      	SBCI R31,HIGH(-_Base_Addrs*2)
0000be 91a4      	LPM  R26,Z
0000bf 940e 01b4 	CALL _spi
                +
0000c1 5001     +SUBI R16 , LOW ( 1 )
0000c2 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0000c3 cff5      	RJMP _0x16
                 _0x17:
0000c4 c003      	RJMP _0x18
                 _0x12:
0000c5 2da5      	MOV  R26,R5
0000c6 940e 01b4 	CALL _spi
                 _0x18:
0000c8 c036      	RJMP _0x8
                 _0x11:
0000c9 36e0      	CPI  R30,LOW(0x60)
0000ca e0a0      	LDI  R26,HIGH(0x60)
0000cb 07fa      	CPC  R31,R26
0000cc f4f1      	BRNE _0x19
0000cd 81ea      	LDD  R30,Y+2
0000ce 70e1      	ANDI R30,LOW(0x1)
0000cf 30e1      	CPI  R30,LOW(0x1)
0000d0 f4a9      	BRNE _0x1A
0000d1 9100 0265 	LDS  R16,_payload
0000d3 2711      	CLR  R17
                 _0x1B:
0000d4 2e00      	MOV  R0,R16
0000d5 2a01      	OR   R0,R17
0000d6 f071      	BREQ _0x1D
0000d7 01f8      	MOVW R30,R16
0000d8 59eb      	SUBI R30,LOW(-_payload)
0000d9 4ffd      	SBCI R31,HIGH(-_payload)
0000da 93ff      	PUSH R31
0000db 93ef      	PUSH R30
0000dc efaf      	LDI  R26,LOW(255)
0000dd 940e 01b4 	CALL _spi
0000df 91af      	POP  R26
0000e0 91bf      	POP  R27
0000e1 93ec      	ST   X,R30
                +
0000e2 5001     +SUBI R16 , LOW ( 1 )
0000e3 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0000e4 cfef      	RJMP _0x1B
                 _0x1D:
0000e5 c004      	RJMP _0x1E
                 _0x1A:
0000e6 efaf      	LDI  R26,LOW(255)
0000e7 940e 01b4 	CALL _spi
0000e9 2e5e      	MOV  R5,R30
                 _0x1E:
0000ea c014      	RJMP _0x8
                 _0x19:
0000eb 3ae0      	CPI  R30,LOW(0xA0)
0000ec e0a0      	LDI  R26,HIGH(0xA0)
0000ed 07fa      	CPC  R31,R26
0000ee f481      	BRNE _0x8
0000ef 9100 0265 	LDS  R16,_payload
0000f1 2711      	CLR  R17
                 _0x20:
0000f2 2e00      	MOV  R0,R16
0000f3 2a01      	OR   R0,R17
0000f4 f051      	BREQ _0x22
0000f5 e6a5      	LDI  R26,LOW(_payload)
0000f6 e0b2      	LDI  R27,HIGH(_payload)
0000f7 0fa0      	ADD  R26,R16
0000f8 1fb1      	ADC  R27,R17
0000f9 91ac      	LD   R26,X
0000fa 940e 01b4 	CALL _spi
                +
0000fc 5001     +SUBI R16 , LOW ( 1 )
0000fd 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0000fe cff3      	RJMP _0x20
                 _0x22:
                 _0x8:
0000ff 9ac4      	SBI  0x18,4
                +
000100 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000101 958a     +DEC R24
000102 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000103 8119      	LDD  R17,Y+1
000104 8108      	LDD  R16,Y+0
000105 9623      	ADIW R28,3
000106 9508      	RET
                 ; .FEND
                 _ext_int2_isr:
                 ; .FSTART _ext_int2_isr
000107 920a      	ST   -Y,R0
000108 921a      	ST   -Y,R1
000109 92fa      	ST   -Y,R15
00010a 936a      	ST   -Y,R22
00010b 937a      	ST   -Y,R23
00010c 938a      	ST   -Y,R24
00010d 939a      	ST   -Y,R25
00010e 93aa      	ST   -Y,R26
00010f 93ba      	ST   -Y,R27
000110 93ea      	ST   -Y,R30
000111 93fa      	ST   -Y,R31
000112 b7ef      	IN   R30,SREG
000113 93ea      	ST   -Y,R30
000114 2066      	TST  R6
000115 f4e1      	BRNE _0x25
000116 efaf      	LDI  R26,LOW(255)
000117 df5d      	RCALL _Set_Reg
000118 fe45      	SBRS R4,5
000119 c015      	RJMP _0x26
00011a e0e2      	LDI  R30,LOW(2)
00011b 2e7e      	MOV  R7,R30
00011c e1a7      	LDI  R26,LOW(23)
00011d df57      	RCALL _Set_Reg
00011e fc50      	SBRC R5,0
00011f c00e      	RJMP _0x27
000120 e6a0      	LDI  R26,LOW(96)
000121 df53      	RCALL _Set_Reg
000122 e2e0      	LDI  R30,LOW(32)
000123 15e5      	CP   R30,R5
000124 f038      	BRLO _0x28
000125 9250 0265 	STS  _payload,R5
000127 e6a1      	LDI  R26,LOW(97)
000128 df4c      	RCALL _Set_Reg
000129 e0e3      	LDI  R30,LOW(3)
00012a 2e7e      	MOV  R7,R30
00012b c002      	RJMP _0x29
                 _0x28:
00012c eea2      	LDI  R26,LOW(226)
00012d df47      	RCALL _Set_Reg
                 _0x29:
                 _0x27:
00012e c002      	RJMP _0x2A
                 _0x26:
00012f e0e4      	LDI  R30,LOW(4)
000130 2e7e      	MOV  R7,R30
                 _0x2A:
000131 c00e      	RJMP _0x2B
                 _0x25:
000132 e6a0      	LDI  R26,LOW(96)
000133 df41      	RCALL _Set_Reg
000134 e2e0      	LDI  R30,LOW(32)
000135 15e5      	CP   R30,R5
000136 f418      	BRSH _0x2C
000137 eea2      	LDI  R26,LOW(226)
000138 df3c      	RCALL _Set_Reg
000139 c006      	RJMP _0x2D
                 _0x2C:
00013a 9250 0265 	STS  _payload,R5
00013c e6a1      	LDI  R26,LOW(97)
00013d df37      	RCALL _Set_Reg
00013e e0e1      	LDI  R30,LOW(1)
00013f 2e7e      	MOV  R7,R30
                 _0x2D:
                 _0x2B:
000140 e7ee      	LDI  R30,LOW(126)
000141 2e5e      	MOV  R5,R30
000142 e2a7      	LDI  R26,LOW(39)
000143 df31      	RCALL _Set_Reg
000144 eea1      	LDI  R26,LOW(225)
000145 df2f      	RCALL _Set_Reg
000146 91e9      	LD   R30,Y+
000147 bfef      	OUT  SREG,R30
000148 91f9      	LD   R31,Y+
000149 91e9      	LD   R30,Y+
00014a 91b9      	LD   R27,Y+
00014b 91a9      	LD   R26,Y+
00014c 9199      	LD   R25,Y+
00014d 9189      	LD   R24,Y+
00014e 9179      	LD   R23,Y+
00014f 9169      	LD   R22,Y+
000150 90f9      	LD   R15,Y+
000151 9019      	LD   R1,Y+
000152 9009      	LD   R0,Y+
000153 9518      	RETI
                 ; .FEND
                 ;	num -> Y+4
                 ;	*data -> Y+2
                 ;	counter -> R16,R17
                 _nRF_Config:
                 ; .FSTART _nRF_Config
000154 93aa      	ST   -Y,R26
                 ;	mode -> Y+0
000155 e0e0      	LDI  R30,LOW(0)
000156 bbe8      	OUT  0x18,R30
000157 ebe0      	LDI  R30,LOW(176)
000158 bbe7      	OUT  0x17,R30
000159 9ac4      	SBI  0x18,4
00015a 98c3      	CBI  0x18,3
00015b b7eb      	IN   R30,0x3B
00015c 62e0      	ORI  R30,0x20
00015d bfeb      	OUT  0x3B,R30
00015e e0e0      	LDI  R30,LOW(0)
00015f bfe5      	OUT  0x35,R30
000160 bfe4      	OUT  0x34,R30
000161 e2e0      	LDI  R30,LOW(32)
000162 bfea      	OUT  0x3A,R30
000163 e5e0      	LDI  R30,LOW(80)
000164 b9ed      	OUT  0xD,R30
000165 e0e0      	LDI  R30,LOW(0)
000166 b9ee      	OUT  0xE,R30
000167 9478      	sei
000168 e6ae      	LDI  R26,LOW(110)
000169 e0b0      	LDI  R27,0
00016a 940e 01c1 	CALL _delay_ms
00016c 8068      	LDD  R6,Y+0
00016d e0e1      	LDI  R30,LOW(1)
00016e 2e5e      	MOV  R5,R30
00016f e2a1      	LDI  R26,LOW(33)
000170 940e 01bc 	CALL SUBOPT_0x0
000172 e2a2      	LDI  R26,LOW(34)
000173 df01      	RCALL _Set_Reg
000174 e0e3      	LDI  R30,LOW(3)
000175 2e5e      	MOV  R5,R30
000176 e2a3      	LDI  R26,LOW(35)
000177 defd      	RCALL _Set_Reg
000178 e2ef      	LDI  R30,LOW(47)
000179 2e5e      	MOV  R5,R30
00017a e2a4      	LDI  R26,LOW(36)
00017b 940e 01bc 	CALL SUBOPT_0x0
00017d e2a5      	LDI  R26,LOW(37)
00017e def6      	RCALL _Set_Reg
00017f e0e6      	LDI  R30,LOW(6)
000180 2e5e      	MOV  R5,R30
000181 e2a6      	LDI  R26,LOW(38)
000182 def2      	RCALL _Set_Reg
000183 e2aa      	LDI  R26,LOW(42)
000184 def0      	RCALL _Set_Reg
000185 e3a0      	LDI  R26,LOW(48)
000186 940e 01bc 	CALL SUBOPT_0x0
000188 e3ac      	LDI  R26,LOW(60)
000189 deeb      	RCALL _Set_Reg
00018a e0e7      	LDI  R30,LOW(7)
00018b 2e5e      	MOV  R5,R30
00018c e3ad      	LDI  R26,LOW(61)
00018d dee7      	RCALL _Set_Reg
00018e 81e8      	LD   R30,Y
00018f 30e0      	CPI  R30,0
000190 f459      	BRNE _0x3F
000191 e4ee      	LDI  R30,LOW(78)
000192 2e5e      	MOV  R5,R30
000193 e2a0      	LDI  R26,LOW(32)
000194 dee0      	RCALL _Set_Reg
000195 e6a4      	LDI  R26,LOW(100)
000196 e0b0      	LDI  R27,0
000197 940e 01c1 	CALL _delay_ms
000199 9468      	SET
00019a f820      	BLD  R2,0
00019b c009      	RJMP _0x40
                 _0x3F:
00019c e3ef      	LDI  R30,LOW(63)
00019d 2e5e      	MOV  R5,R30
00019e e2a0      	LDI  R26,LOW(32)
00019f ded5      	RCALL _Set_Reg
0001a0 e0a5      	LDI  R26,LOW(5)
0001a1 e0b0      	LDI  R27,0
0001a2 940e 01c1 	CALL _delay_ms
0001a4 9ac3      	SBI  0x18,3
                 _0x40:
0001a5 940c 01ba 	JMP  _0x2080001
                 ; .FEND
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;char data1;
                 ;void main(void)
                 ; 0000 0009 {
                 _main:
                 ; .FSTART _main
                 ; 0000 000A 
                 ; 0000 000B DDRA=0xff;
0001a7 efef      	LDI  R30,LOW(255)
0001a8 bbea      	OUT  0x1A,R30
                 ; 0000 000C nRF_Config(1);
0001a9 e0a1      	LDI  R26,LOW(1)
0001aa dfa9      	RCALL _nRF_Config
                 ; 0000 000D while (1)
                 _0x43:
                 ; 0000 000E       {
                 ; 0000 000F       if(State == 1)
0001ab e0e1      	LDI  R30,LOW(1)
0001ac 15e7      	CP   R30,R7
0001ad f421      	BRNE _0x46
                 ; 0000 0010         {
                 ; 0000 0011         data1 = payload[1];
                +
0001ae 9090 0266+LDS R9 , _payload + ( 1 )
                 	__GETBRMN 9,_payload,1
                 ; 0000 0012         PORTA=data1;
0001b0 ba9b      	OUT  0x1B,R9
                 ; 0000 0013         State = 0;
0001b1 2477      	CLR  R7
                 ; 0000 0014         }
                 ; 0000 0015       }
                 _0x46:
0001b2 cff8      	RJMP _0x43
                 ; 0000 0016 }
                 _0x47:
0001b3 cfff      	RJMP _0x47
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _spi:
                 ; .FSTART _spi
0001b4 93aa      	ST   -Y,R26
0001b5 81e8      	LD   R30,Y
0001b6 b9ef      	OUT  0xF,R30
                 _0x2020003:
0001b7 9b77      	SBIS 0xE,7
0001b8 cffe      	RJMP _0x2020003
0001b9 b1ef      	IN   R30,0xF
                 _0x2080001:
0001ba 9621      	ADIW R28,1
0001bb 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _Temp_Addrs:
000260           	.BYTE 0x5
                 _payload:
000265           	.BYTE 0x21
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0001bc 940e 0075 	CALL _Set_Reg
0001be e0e1      	LDI  R30,LOW(1)
0001bf 2e5e      	MOV  R5,R30
0001c0 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0001c1 9610      	adiw r26,0
0001c2 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0001c3 ed80     +LDI R24 , LOW ( 0x7D0 )
0001c4 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0001c5 9701     +SBIW R24 , 1
0001c6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0001c7 95a8      	wdr
0001c8 9711      	sbiw r26,1
0001c9 f7c9      	brne __delay_ms0
                 __delay_ms1:
0001ca 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  10 r1 :   3 r2 :   1 r3 :   0 r4 :   2 r5 :  17 r6 :   2 r7 :   6 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:  16 r17:  15 r18:   0 r19:   0 r20:   0 r21:   0 r22:   4 r23:   2 
r24:  13 r25:   5 r26:  54 r27:  11 r28:   3 r29:   1 r30: 116 r31:  17 
x  :   6 y  :  43 z  :   8 
Registers used: 24 out of 35 (68.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   1 
adiw  :   3 and   :   0 andi  :   9 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   8 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   2 brne  :  16 brpl  :   0 brsh  :   1 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  15 
cbi   :   2 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   5 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   3 cpi   :  11 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   3 inc   :   0 jmp   :  23 ld    :  15 ldd   :  12 ldi   :  82 
lds   :   3 lpm   :   9 lsl   :   0 lsr   :   0 mov   :  19 movw  :   6 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   2 
ori   :   1 out   :  20 pop   :   4 push  :   4 rcall :  20 ret   :   4 
reti  :   1 rjmp  :  21 rol   :   0 ror   :   0 sbc   :   0 sbci  :   7 
sbi   :   3 sbic  :   0 sbis  :   1 sbiw  :   6 sbr   :   0 sbrc  :   1 
sbrs  :   1 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  22 std   :   0 sts   :   2 sub   :   0 subi  :   7 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 49 out of 116 (42.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000396    864     54    918   32768   2.8%
[.dseg] 0x000060 0x000286      0     38     38    2048   1.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
